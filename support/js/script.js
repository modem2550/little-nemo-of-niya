document.querySelectorAll(".switcher").forEach((function(e){const t=Array.from(e.querySelectorAll(".switcher__option")),n=t.map((e=>e.querySelector('input[type="radio"]'))),r=e.querySelector(".switcher__indicator");let o=Math.max(0,n.findIndex((e=>e&&e.checked))),s=o;i(o,!1),t.forEach(((e,t)=>{e.addEventListener("click",(r=>{r.preventDefault(),s=o;const c=n[t];c&&!c.checked&&(c.checked=!0,c.dispatchEvent(new Event("change",{bubbles:!0})));const i=e.getAttribute("data-href");if(i&&i.startsWith("#")){const e=document.querySelector(i);e&&e.scrollIntoView({behavior:"smooth",block:"start"})}}));const r=n[t];r&&r.addEventListener("change",(()=>{r.checked&&(o=t,i(o,!0))}))}));let c=null;function i(n,o){const c=t[n];if(!c)return;const i=c.getBoundingClientRect(),l=e.getBoundingClientRect(),a=i.left-l.left;i.width,r.style.transition=o?"":"none",r.style.width="78px",r.style.transform=`translateX(${a-12}px)`,r.style.height="60px",r.classList.remove("pulse-left","pulse-right"),o&&r.classList.add(n>s?"pulse-right":"pulse-left")}window.addEventListener("resize",(()=>{cancelAnimationFrame(c),c=requestAnimationFrame((()=>i(o,!1)))}))}));const sliders=document.querySelectorAll(".slide-left"),observer=new IntersectionObserver((e=>{e.forEach((e=>{e.isIntersecting&&e.target.classList.add("show")}))}),{threshold:.2});function openPopup(){document.getElementById("popup-overlay").style.display="flex"}function closePopup(){document.getElementById("popup-overlay").style.display="none"}sliders.forEach((e=>{observer.observe(e)})),document.querySelectorAll(".switcher").forEach((e=>{const t=Array.from(e.querySelectorAll(".switcher__option")),n=e.querySelector(".switcher__indicator");if(!n||0===t.length)return;const r=new Map;t.forEach(((e,t)=>{const n=e.getAttribute("data-href");if(n&&n.startsWith("#")){const e=document.querySelector(n);e&&r.set(e,t)}e.addEventListener("click",(e=>{if(e.preventDefault(),s(t),n&&n.startsWith("#")){const e=document.querySelector(n);e&&e.scrollIntoView({behavior:"smooth"})}}))}));const o=new IntersectionObserver((e=>{let t=null;if(e.forEach((e=>{e.isIntersecting&&(!t||e.intersectionRatio>t.intersectionRatio)&&(t=e)})),t){const e=r.get(t.target);"number"==typeof e&&s(e)}}),{threshold:.4});function s(r){const o=t[r];if(!o)return;const s=o.getBoundingClientRect(),c=e.getBoundingClientRect();n.style.transition="transform 420ms cubic-bezier(1, 0.0, 0.4, 1)",n.style.transform=`translateX(${s.left-c.left-12}px)`}r.forEach(((e,t)=>o.observe(t)))}));
